// Code generated by MockGen. DO NOT EDIT.
// Source: go.octolab.org/ecosystem/guard/internal/transport/http/api/internal (interfaces: API)

// Package chi_test is a generated GoMock package.
package chi_test

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAPI is a mock of API interface
type MockAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAPIMockRecorder
}

// MockAPIMockRecorder is the mock recorder for MockAPI
type MockAPIMockRecorder struct {
	mock *MockAPI
}

// NewMockAPI creates a new mock instance
func NewMockAPI(ctrl *gomock.Controller) *MockAPI {
	mock := &MockAPI{ctrl: ctrl}
	mock.recorder = &MockAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAPI) EXPECT() *MockAPIMockRecorder {
	return m.recorder
}

// CheckLicenseV1 mocks base method
func (m *MockAPI) CheckLicenseV1(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CheckLicenseV1", arg0, arg1)
}

// CheckLicenseV1 indicates an expected call of CheckLicenseV1
func (mr *MockAPIMockRecorder) CheckLicenseV1(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckLicenseV1", reflect.TypeOf((*MockAPI)(nil).CheckLicenseV1), arg0, arg1)
}
